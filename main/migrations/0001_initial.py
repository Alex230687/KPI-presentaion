# Generated by Django 2.1.7 on 2020-05-03 11:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Last name')),
                ('middle_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Middle name')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active status')),
                ('is_manager', models.BooleanField(default=True, verbose_name='Manager status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', main.models.AccountManager()),
            ],
        ),
        migrations.CreateModel(
            name='CurrentPeriod',
            fields=[
                ('year', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='Year')),
                ('period', models.DateField(verbose_name='Period')),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(verbose_name='Period')),
                ('value', models.FloatField(default=0, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('slug', models.SlugField(max_length=20, verbose_name='Sort name')),
            ],
        ),
        migrations.CreateModel(
            name='IndicatorEffect',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndicatorGroup',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                # ('row_code', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Row code')),
                # ('org_code', models.PositiveSmallIntegerField(blank=True, null=True,
                #                                               verbose_name='Organization code')),
                ('row_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                  related_name='row_rel', to='main.Row')),
                ('org_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                  related_name='org_rel', to='main.Organization')),

                ('numerator', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Numerator')),
                ('denominator', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Denominator')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Year')),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Indicator')),
                ('row_position', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Row position')),
            ],
        ),
        migrations.CreateModel(
            name='Row',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='RowGroup1',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RowGroup2',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RowGroup3',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RowType',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Scale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_position', models.PositiveSmallIntegerField(verbose_name='Row number')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Year')),
                ('percent_min', models.FloatField(verbose_name='Minimum scale percent')),
                ('percent_max', models.FloatField(verbose_name='Maximum scale percent')),
                ('bonus_min', models.FloatField(verbose_name='Minimum bonus percent')),
                ('bonus_max', models.FloatField(verbose_name='Maximum bonus percent')),
                ('bonus_share', models.FloatField(default=0, verbose_name='Bonus share')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Indicator')),
            ],
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Year')),
                ('target', models.FloatField(blank=True, null=True, verbose_name='Target')),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Indicator')),
            ],
        ),
        migrations.AddField(
            model_name='row',
            name='row_group1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.RowGroup1'),
        ),
        migrations.AddField(
            model_name='row',
            name='row_group2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.RowGroup2'),
        ),
        migrations.AddField(
            model_name='row',
            name='row_group3',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.RowGroup3'),
        ),
        migrations.AddField(
            model_name='row',
            name='row_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.RowType'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='indicator_effect',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.IndicatorEffect'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='indicator_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.IndicatorGroup'),
        ),
        migrations.AddField(
            model_name='data',
            name='data_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.DataType'),
        ),
        migrations.AddField(
            model_name='data',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Organization'),
        ),
        migrations.AddField(
            model_name='data',
            name='row',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Row'),
        ),
    ]
